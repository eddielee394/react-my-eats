{"version":3,"sources":["app/services/errorHandler/index.js","app/services/errorHandler/errorHandler.js","app/config/appConfig.js","app/services/crescendoRecipeApi/index.js","app/services/crescendoRecipeApi/crescendoRecipeApi.js","app/services/api/api.js","app/services/api/index.js","app/components/ui/layout/sidebar.js","app/components/recipes/recipeDetail/recipeDetailHeading.js","app/components/recipes/recipeDetail/recipeDetailIngredients.js","app/components/recipes/recipeDetail/recipeDetailDirections.js","app/components/recipes/recipeDetail/recipeDetailImages.js","app/components/recipes/recipeDetail/recipeDetail.js"],"names":["ErrorHandler","getGeneralApiError","response","problem","error","data","message","temporary","APP_CONFIG","appName","process","REACT_APP_NAME","appUrl","apiBaseUrl","apiAdapter","CrescendoRecipeApi","api","create","baseURL","timeout","headers","Accept","baseUrl","getRecipes","a","async","get","getIngredientSpecials","specials","ok","errorHandler","console","log","convertData","uuid","title","description","images","full","medium","small","gallery","generateDummyData","path","servings","prepTime","cookTime","postDate","editDate","ingredients","map","d","index","amount","measurement","name","image","directions","instructions","optional","specialsCount","filterCollectionByObjProp","length","rawData","getRecipe","id","ingredientId","type","geo","text","htmlParser","getIngredientSpecial","this","instance","filteredIngredientSpecials","filter","special","some","ingredient","getSpecials","getSpecial","Api","useStyles","makeStyles","theme","col","padding","spacing","marginTop","marginBottom","widget","overflow","Sidebar","children","widgetClasses","colSize","className","classes","clsx","offsetTop","offsetBottom","React","Children","child","Hidden","props","recipeTime","color","palette","grey","RecipeDetailHeading","Typography","variant","Chip","icon","label","size","Button","onClick","showNotification","defaultProps","specialsIconBadge","width","height","right","top","backgroundColor","background","paper","border","ingredientListSpecial","boxShadow","borderTopLeftRadius","borderTopRightRadius","borderTop","borderLeft","primary","light","borderRight","ingredientListSpecialContainer","borderBottomLeftRadius","borderBottomRightRadius","IngredientSpecialIcon","fontSize","event","local","promocode","sale","RecipeDetailIngredients","useState","activeSpecial","setActiveSpecial","hasIngredientSpecial","_renderIngredientListItem","find","_special","Fragment","ListItem","button","handleListExpand","ListItemAvatar","Badge","badgeContent","overlap","badge","invisible","Avatar","src","capitalize","Collapse","in","unmountOnExit","Divider","Zoom","style","transitionDelay","List","key","RecipeDetailDirections","activeStep","setActiveStep","Stepper","orientation","connector","nonLinear","toArray","direction","Step","StepButton","handleChangeActiveStep","align","imagesContainer","featuredImageContainer","gridImageContainer","gridImageViewMoreBadge","overlay","StyledGridListTileBar","withStyles","root","titleWrap","margin","GridListTileBar","RecipeDetailImages","galleryImages","setGalleryImages","galleryPage","setGalleryPage","galleryPageTotal","setGalleryPageTotal","galleryImagesPerPage","chunkedImages","useMemo","chunk","galleryViewMoreCount","useEffect","_renderGalleryImages","GridList","cellHeight","cols","GridListTile","IconButton","RecipeDetail","isLoading","setIsLoading","recipe","setRecipe","setSpecials","match","params","recipeResponse","specialsResponse","getData","data-testid","loader","loadingProps","loaderType","Paper"],"mappings":"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","file":"static/js/8.95f8f681.chunk.js","sourcesContent":["import ErrorHandler from './errorHandler';\nexport default ErrorHandler;\n","class ErrorHandler {\n  /**\n   * Attempts to get a common cause of problems from an api response.\n   *\n   * @param response The api response.\n   */\n  getGeneralApiError = response => {\n    switch (response.problem) {\n      case \"CONNECTION_ERROR\":\n        return {\n          error: true,\n          data: { message: \"cannot-connect\", temporary: true }\n        };\n      case \"NETWORK_ERROR\":\n        return {\n          error: true,\n          data: { message: \"network error\", temporary: true }\n        };\n      case \"TIMEOUT_ERROR\":\n        return { error: true, data: { message: \"timeout\", temporary: true } };\n      case \"SERVER_ERROR\":\n        return { error: true, data: { message: \"server\", temporary: true } };\n      case \"UNKNOWN_ERROR\":\n        return { error: true, data: { message: \"unknown\", temporary: true } };\n      case \"CLIENT_ERROR\":\n        switch (response.message) {\n          case 401:\n            return { data: { message: \"unauthorized\" } };\n          case 403:\n            return { data: { message: \"forbidden\" } };\n          case 404:\n            return { data: { message: \"not-found\", data: response.data } };\n          default:\n            return { data: { message: \"rejected\", data: response.data } };\n        }\n      case \"CANCEL_ERROR\":\n        return null;\n      default:\n        return {\n          error: true,\n          message: \"cannot-connect api error\",\n          temporary: true\n        };\n    }\n  };\n}\n\nexport default ErrorHandler;\n","export const APP_CONFIG = {\n  appName: process.env.REACT_APP_NAME || \"MyEats\",\n  appUrl: process.env.REACT_APP_BASE_URL || process.env.PUBLIC_URL,\n  apiBaseUrl: process.env.REACT_APP_API_URL || \"/api\",\n  apiAdapter: process.env.REACT_APP_API_ADAPTER || \"mock-adapter\"\n};\n","import CrescendoRecipeApi from './crescendoRecipeApi';\nexport default CrescendoRecipeApi;\n","import { create } from \"apisauce\";\nimport ErrorHandler from \"../errorHandler\";\nimport {\n  filterCollectionByObjProp,\n  generateDummyData,\n  htmlParser\n} from \"../../utils/helpers\";\nimport { APP_CONFIG } from \"../../config/appConfig\";\n\nclass CrescendoRecipeApi {\n  constructor() {\n    this.errorHandler = new ErrorHandler();\n  }\n\n  api = create({\n    baseURL: APP_CONFIG.apiBaseUrl,\n    timeout: 10000,\n    headers: {\n      Accept: \"application/json\"\n    }\n  });\n\n  //todo github.io temp fix to handle the diff between the json server & mock api urls\n  // when it comes to managing the image url paths\n  baseUrl =\n    process.env.REACT_APP_API_ADAPTER === \"mock-adapter\"\n      ? APP_CONFIG.appUrl\n      : APP_CONFIG.apiBaseUrl;\n\n  /**\n   * Gets all recipes\n   *\n   * @return {Promise<{ data: {uuid: string, title: string, description: string, images: {full: string, medium: string, small: string}, servings: number, prepTime: number, cookTime: number, postDate: Date, editDate: Date, ingredients: {uuid: string, amount: string, measurement: string, name: string}[], directions: {instructions: string, \"optional\": boolean}[], specialsCount: number}[], message: string}>}\n   */\n  getRecipes = async () => {\n    const response = await this.api.get(\"/recipes\");\n    const specials = await this.getIngredientSpecials();\n\n    // the typical ways to die when calling an api\n    if (!response.ok) {\n      const error = this.errorHandler.getGeneralApiError(response);\n\n      if (error) {\n        console.log(\"Api problem\", error);\n        return error;\n      }\n    }\n\n    const convertData = data => {\n      return {\n        uuid: data.uuid,\n        title: data.title,\n        description: data.description,\n        images: {\n          full: `${this.baseUrl}${data.images.full}`,\n          medium: `${this.baseUrl}${data.images.medium}`,\n          small: `${this.baseUrl}${data.images.small}`,\n          gallery: generateDummyData(\n            { title: \"test\", path: \"https://loremflickr.com/320/240/food\" },\n            14\n          )\n        },\n        servings: data.servings,\n        prepTime: data.prepTime,\n        cookTime: data.cookTime,\n        postDate: data.postDate,\n        editDate: data.editDate,\n        ingredients: data.ingredients.map((d, index) => {\n          return {\n            uuid: d.uuid,\n            amount: d.amount,\n            measurement: d.measurement,\n            name: d.name,\n            image: `https://loremflickr.com/100/100/food?random=${index}`\n          };\n        }),\n        directions: data.directions.map(d => {\n          return {\n            instructions: d.instructions,\n            optional: d.optional\n          };\n        }),\n        specialsCount: filterCollectionByObjProp(\n          specials.data,\n          data.ingredients,\n          \"ingredientId\",\n          \"uuid\"\n        ).length\n      };\n    };\n\n    // transform the data into the format we are expecting\n    try {\n      const rawData = response.data;\n      const data = rawData.map(d => convertData(d));\n\n      return { message: \"ok\", data };\n    } catch {\n      return { message: \"bad-data\", data: response.data };\n    }\n  };\n\n  /**\n   * Fetches a single recipe\n   * @param id\n   * @return {Promise<{ data: {uuid: string, title: string, description: string, images: {full: string, medium: string, small: string}, servings: number, prepTime: number, cookTime: number, postDate: Date, editDate: Date, ingredients: {uuid: string, amount: string, measurement: string, name: string}[], directions: {instructions: string, \"optional\": boolean}[], specialsCount: number}[], message: string}>}\n   */\n  getRecipe = async id => {\n    const response = await this.api.get(`/recipes/${id}`);\n    const specials = await this.getIngredientSpecials();\n\n    // the typical ways to die when calling an api\n    if (!response.ok) {\n      const error = this.errorHandler.getGeneralApiError(response);\n\n      if (error) {\n        console.log(\"Api problem\", error);\n        return error;\n      }\n    }\n\n    const convertData = data => {\n      return {\n        uuid: data.uuid,\n        title: data.title,\n        description: data.description,\n        images: {\n          full: `${this.baseUrl}${data.images.full}`,\n          medium: `${this.baseUrl}${data.images.medium}`,\n          small: `${this.baseUrl}${data.images.small}`,\n          gallery: generateDummyData(\n            { title: \"test\", path: \"https://loremflickr.com/320/240/food\" },\n            14\n          )\n        },\n        servings: data.servings,\n        prepTime: data.prepTime,\n        cookTime: data.cookTime,\n        postDate: data.postDate,\n        editDate: data.editDate,\n        ingredients: data.ingredients.map((d, index) => {\n          return {\n            uuid: d.uuid,\n            amount: d.amount,\n            measurement: d.measurement,\n            name: d.name,\n            image: `https://loremflickr.com/100/100/food?random=${index}`\n          };\n        }),\n        directions: data.directions.map(d => {\n          return {\n            instructions: d.instructions,\n            optional: d.optional\n          };\n        }),\n        specialsCount: filterCollectionByObjProp(\n          specials.data,\n          data.ingredients,\n          \"ingredientId\",\n          \"uuid\"\n        ).length\n      };\n    };\n\n    // transform the data into the format we are expecting\n    try {\n      const data = convertData(response.data);\n\n      return { message: \"ok\", data };\n    } catch {\n      return { message: \"bad-data\", data: response.data };\n    }\n  };\n\n  /**\n   * Fetches specials by ingredient\n   * @return {Promise<{data: {geo?: string, ingredientId: string, text?: string, type: string, title: string, uuid: string}, message: string}>}\n   */\n  getIngredientSpecials = async () => {\n    const response = await this.api.get(\"/specials\");\n    // the typical ways to die when calling an api\n    if (!response.ok) {\n      const error = this.errorHandler.getGeneralApiError(response);\n\n      if (error) {\n        console.log(\"Api problem\", error);\n        return error;\n      }\n    }\n\n    const convertData = data => {\n      return {\n        uuid: data.uuid,\n        ingredientId: data.ingredientId,\n        type: data.type,\n        title: data.title,\n        geo: data.geo,\n        text: htmlParser(data.text)\n      };\n    };\n\n    // transform the data into the format we are expecting\n    try {\n      const rawData = response.data;\n      const data = rawData.map(d => convertData(d));\n\n      return { message: \"ok\", data };\n    } catch {\n      return { message: \"bad-data\", data: response.data };\n    }\n  };\n\n  /**\n   * Fetches a single special\n   * @param {string} id\n   * @returns {Promise<{data: {geo?: string, ingredientId: string, text: string, type: string, title: string, uuid: string}, message: string}>}\n   */\n  getIngredientSpecial = async id => {\n    const response = await this.api.get(`/specials/${id}`);\n    // the typical ways to die when calling an api\n    if (!response.ok) {\n      const error = this.errorHandler.getGeneralApiError(response);\n\n      if (error) {\n        console.log(\"Api problem\", error);\n        return error;\n      }\n    }\n\n    const convertData = data => {\n      return {\n        uuid: data.uuid,\n        ingredientId: data.ingredientId,\n        type: data.type,\n        title: data.title,\n        geo: data.geo,\n        text: htmlParser(data.text)\n      };\n    };\n\n    // transform the data into the format we are expecting\n    try {\n      const data = convertData(response.data);\n\n      return { message: \"ok\", data };\n    } catch {\n      return { message: \"bad-data\", data: response.data };\n    }\n  };\n}\n\nexport default CrescendoRecipeApi;\n","import CrescendoRecipeApi from \"../crescendoRecipeApi\";\n\nclass Api {\n  constructor() {\n    this.api = new CrescendoRecipeApi();\n  }\n\n  /**\n   * Fetches all recipes\n   * @returns {Promise<{ data: {uuid: string, title: string, description: string, images: {full: string, medium: string, small: string}, servings: number, prepTime: number, cookTime: number, postDate: Date, editDate: Date, ingredients: {uuid: string, amount: string, measurement: string, name: string}[], directions: {instructions: string, \"optional\": boolean}[]}[], message: string}>}\n   */\n  getRecipes = () => this.api.getRecipes();\n\n  /**\n   * Fetches a single recipe\n   * @param {string } id\n   * @returns {Promise<{ data: {uuid: string, title: string, description: string, images: {full: string, medium: string, small: string}, servings: number, prepTime: number, cookTime: number, postDate: Date, editDate: Date, ingredients: {uuid: string, amount: string, measurement: string, name: string}[], directions: {instructions: string, \"optional\": boolean}[]}[], message: string}>}\n   */\n  getRecipe = id => this.api.getRecipe(id);\n\n  /**\n   * Fetches specials for a specific set of recipe ingredients\n   * @param {array} ingredients\n   * @returns {Promise<{data: *}>}\n   */\n  getIngredientSpecials = async (ingredients = []) => {\n    const specials = await this.api.getIngredientSpecials();\n\n    const filteredIngredientSpecials = specials.data.filter(special =>\n      ingredients.some(ingredient => special.ingredientId === ingredient.uuid)\n    );\n\n    return { data: filteredIngredientSpecials };\n  };\n\n  /**\n   * Fetches all ingredient specials\n   * @returns {Promise<{data: {geo?: string, ingredientId: string, text?: string, type: string, title: string, uuid: string}, message: string}>}\n   */\n  getSpecials = () => this.api.getIngredientSpecials();\n\n  /**\n   * Fetches a single special\n   * @param id\n   * @returns {Promise<{data: {geo?: string, ingredientId: string, text: string, type: string, title: string, uuid: string}, message: string}>}\n   */\n  getSpecial = id => this.api.getIngredientSpecial(id);\n}\n\nconst instance = new Api();\n\nexport default instance;\n","import Api from './api';\nexport default Api;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport StickyBox from \"react-sticky-box\";\nimport { Paper, makeStyles, Hidden } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  col: {\n    padding: theme.spacing(1.25),\n    marginTop: theme.spacing(1.25),\n    marginBottom: theme.spacing(1.25)\n  },\n  widget: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n    overflow: \"hidden\"\n  }\n}));\n\nfunction Sidebar({\n  children,\n  widgetClasses = \"\",\n  colSize = \"1/5\",\n  className = \"\",\n  ...props\n}) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(\n        classes.col,\n        className,\n        `flex flex-col w-full sm:w-${colSize} sidebar-container`\n      )}\n    >\n      <StickyBox offsetTop={10} offsetBottom={20}>\n        <div className=\"widget-container\">\n          {React.Children.map(children, child => {\n            if (child.type.name === Hidden.name) {\n              return (\n                <Hidden {...child.props}>\n                  <Paper className={clsx(classes.widget, widgetClasses)}>\n                    {child}\n                  </Paper>\n                </Hidden>\n              );\n            }\n\n            return (\n              <Paper className={clsx(classes.widget, widgetClasses)}>\n                {child}\n              </Paper>\n            );\n          })}\n        </div>\n      </StickyBox>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element)\n  ]),\n  className: PropTypes.string,\n  colSize: PropTypes.string,\n  widgetClasses: PropTypes.string\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Chip, Typography, makeStyles } from \"@material-ui/core\";\nimport { showNotification } from \"../../../utils/helpers\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n  recipeTime: {\n    color: theme.palette.grey[\"900\"]\n  }\n}));\n\nconst RecipeDetailHeading = ({ title, prepTime, cookTime }) => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"w-full md:flex justify-between my-8\">\n      <div className=\"flex flex-col items-center md:items-stretch w-full md:w-2/3\">\n        <Typography variant=\"h4\" className=\"recipe-title\">\n          {title}\n        </Typography>\n        <div className=\"flex my-5\">\n          <Chip\n            icon={<AccessTimeIcon color=\"primary\" />}\n            label={`Prep time: ${prepTime} mins`}\n            size=\"small\"\n            variant=\"outlined\"\n            className={clsx(classes.recipeTime, \"ml-2\")}\n          />\n          <Chip\n            icon={<AccessTimeIcon color=\"primary\" />}\n            label={`Cook time: ${cookTime} mins`}\n            size=\"small\"\n            variant=\"outlined\"\n            className={clsx(classes.recipeTime, \"ml-2\")}\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-col w-full md:w-1/3 self-center\">\n        <div className=\"flex flex-row justify-center\">\n          <Button\n            onClick={showNotification}\n            size=\"medium\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Start Cooking\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nRecipeDetailHeading.propTypes = {\n  title: PropTypes.string.isRequired,\n  prepTime: PropTypes.number,\n  cookTime: PropTypes.number\n};\n\nRecipeDetailHeading.defaultProps = {\n  title: \"\",\n  images: {}\n};\n\nexport default RecipeDetailHeading;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { capitalize, some } from \"lodash\";\nimport clsx from \"clsx\";\nimport {\n  Avatar,\n  Badge,\n  Button,\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  makeStyles,\n  Typography,\n  Zoom\n} from \"@material-ui/core\";\nimport LoyaltyRoundedIcon from \"@material-ui/icons/LoyaltyRounded\";\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\"; //promocode\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\"; //local\nimport PlaceIcon from \"@material-ui/icons/Place\"; //event\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\"; //sale\nimport Img from \"../../ui/img/img\";\nimport { showNotification } from \"../../../utils/helpers\";\n\nconst useStyles = makeStyles(theme => ({\n  specialsIconBadge: {\n    width: 23,\n    height: 23,\n    right: -3,\n    padding: \"12px\",\n    top: 35,\n    backgroundColor: theme.palette.background.paper,\n    border: `1px solid ${theme.palette.background.paper}`\n  },\n  ingredientListSpecial: {\n    boxShadow: \"0px -5px 5px -5px rgba(137,246,207,0.50)\",\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 5,\n    borderTop: `1px solid ${theme.palette.background.paper}`,\n    borderLeft: `4px solid ${theme.palette.primary.light}`,\n    borderRight: `2px solid ${theme.palette.primary.light}`\n  },\n  ingredientListSpecialContainer: {\n    boxShadow: \"inset 0px -5px 7px -5px rgba(137,246,207,0.50)\",\n    borderBottomLeftRadius: 15,\n    borderBottomRightRadius: 5,\n    borderLeft: `4px solid ${theme.palette.primary.light}`,\n    borderRight: `2px solid ${theme.palette.primary.light}`\n  }\n}));\n\nconst IngredientSpecialIcon = ({ type, color, fontSize }) => {\n  const specialIcon = {\n    event: <PlaceIcon color={color} fontSize={fontSize} />,\n    local: <ShoppingBasketIcon color={color} fontSize={fontSize} />,\n    promocode: <CardGiftcardIcon color={color} fontSize={fontSize} />,\n    sale: <MonetizationOnIcon color={color} fontSize={fontSize} />\n  };\n\n  return specialIcon[type];\n};\n\nfunction RecipeDetailIngredients({ ingredients, specials }) {\n  const [activeSpecial, setActiveSpecial] = useState(false);\n  const classes = useStyles();\n\n  const findIngredientSpecial = ingredientId =>\n    specials.find(_special => _special.ingredientId === ingredientId);\n\n  const hasIngredientSpecial = ingredientId =>\n    some(specials, [\"ingredientId\", ingredientId]);\n\n  const handleListExpand = ingredientId => {\n    activeSpecial === ingredientId\n      ? setActiveSpecial(false)\n      : setActiveSpecial(ingredientId);\n  };\n\n  const _renderIngredientListItem = ingredient => {\n    const special = findIngredientSpecial(ingredient.uuid);\n\n    return (\n      <React.Fragment>\n        <ListItem\n          className={clsx({\n            [classes.ingredientListSpecial]: hasIngredientSpecial(\n              ingredient.uuid\n            )\n          })}\n          button={hasIngredientSpecial(ingredient.uuid)}\n          onClick={() =>\n            hasIngredientSpecial(ingredient.uuid) &&\n            handleListExpand(ingredient.uuid)\n          }\n        >\n          <ListItemAvatar>\n            <Badge\n              badgeContent={<LoyaltyRoundedIcon color=\"primary\" />}\n              overlap=\"circle\"\n              classes={{ badge: classes.specialsIconBadge }}\n              invisible={!hasIngredientSpecial(ingredient.uuid)}\n            >\n              <Avatar>\n                <Img src={ingredient.image} />\n              </Avatar>\n            </Badge>\n          </ListItemAvatar>\n          <Typography variant=\"subtitle2\">{ingredient.name}</Typography>\n          {hasIngredientSpecial(ingredient.uuid) && (\n            <div className=\"flex flex-col items-center ml-auto\">\n              <IngredientSpecialIcon\n                type={special.type}\n                color=\"primary\"\n                fontSize=\"small\"\n              />\n              <Typography variant=\"caption\">\n                {capitalize(special.type)} Special\n              </Typography>\n            </div>\n          )}\n        </ListItem>\n        {hasIngredientSpecial(ingredient.uuid) && (\n          <Collapse\n            in={activeSpecial === ingredient.uuid}\n            timeout=\"auto\"\n            unmountOnExit\n          >\n            <div\n              className={clsx(\n                classes.ingredientListSpecialContainer,\n                \"flex p-5 w-full\"\n              )}\n            >\n              <div className=\"flex flex-col w-3/5\">\n                <Typography className=\"my-2\" variant=\"body1\">\n                  {special.title}\n                </Typography>\n                <Divider className=\"w-1/2\" />\n                <Typography className=\"my-2\" variant=\"body2\">\n                  {special.text}\n                </Typography>\n              </div>\n              <div className=\"flex flex-col w-2/5 justify-center items-center\">\n                <Zoom\n                  in={activeSpecial === ingredient.uuid}\n                  timeout={300}\n                  style={{\n                    transitionDelay: `${\n                      activeSpecial === ingredient.uuid ? 500 : 0\n                    }ms`\n                  }}\n                  unmountOnExit\n                >\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={showNotification}\n                  >\n                    Learn More!\n                  </Button>\n                </Zoom>\n              </div>\n            </div>\n          </Collapse>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <div className=\"w-full my-8 mb-10\">\n      <Typography variant=\"h6\">Ingredients</Typography>\n      <List className=\"flex flex-wrap\">\n        {ingredients.map(ingredient => (\n          <div className=\"w-full md:w-1/2\" key={ingredient.uuid}>\n            {_renderIngredientListItem(ingredient)}\n          </div>\n        ))}\n      </List>\n    </div>\n  );\n}\n\nRecipeDetailIngredients.propTypes = {\n  ingredients: PropTypes.array,\n  specials: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default RecipeDetailIngredients;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Step, Stepper, StepButton, Typography } from \"@material-ui/core\";\n\nfunction RecipeDetailDirections({ directions }) {\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleChangeActiveStep = index => {\n    setActiveStep(index);\n  };\n\n  return (\n    <div className=\"w-full my-8 mb-10\">\n      <Typography variant=\"h6\">How to cook</Typography>\n      <div className=\"w-full\">\n        <Stepper\n          activeStep={activeStep}\n          orientation=\"vertical\"\n          connector={null}\n          className=\"flex flex-wrap content-between md:max-h-360 p-5\"\n          nonLinear\n        >\n          {React.Children.toArray(\n            directions.map((direction, index) => (\n              <Step className=\"w-full md:w-1/2 my-5 px-3\">\n                <StepButton onClick={() => handleChangeActiveStep(index)}>\n                  <Typography variant=\"body2\" align=\"left\">\n                    {direction.instructions}\n                  </Typography>\n                </StepButton>\n              </Step>\n            ))\n          )}\n        </Stepper>\n      </div>\n    </div>\n  );\n}\n\nRecipeDetailDirections.propTypes = {\n  directions: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nRecipeDetailDirections.defaultProps = {\n  directions: []\n};\n\nexport default RecipeDetailDirections;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { chunk } from \"lodash\";\nimport {\n  Badge,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  IconButton,\n  makeStyles,\n  withStyles\n} from \"@material-ui/core\";\nimport PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Img from \"../../ui/img/img\";\n\nconst useStyles = makeStyles(theme => ({\n  imagesContainer: {},\n  featuredImageContainer: {\n    overflow: \"hidden\"\n  },\n  gridImageContainer: {},\n  gridImageViewMoreBadge: {\n    color: theme.palette.background.paper,\n    border: `2px solid ${theme.palette.overlay.light[3]}`\n  }\n}));\n\nconst StyledGridListTileBar = withStyles(theme => ({\n  root: {\n    height: \"100%\",\n    backgroundColor: theme.palette.overlay.light[3]\n  },\n  titleWrap: {\n    color: theme.palette.text.primary,\n    margin: 0\n  }\n}))(GridListTileBar);\n\nfunction RecipeDetailImages({ images = {} }) {\n  const [galleryImages, setGalleryImages] = useState([]);\n  const [galleryPage, setGalleryPage] = useState(1);\n  const [galleryPageTotal, setGalleryPageTotal] = useState(1);\n  const [galleryImagesPerPage] = useState(5);\n  const { gallery } = images;\n\n  const classes = useStyles();\n\n  const chunkedImages = useMemo(() => chunk(gallery, galleryImagesPerPage), [\n    gallery,\n    galleryImagesPerPage\n  ]);\n\n  const galleryViewMoreCount =\n    galleryPage === galleryPageTotal\n      ? 0\n      : gallery.length - galleryImages.length * galleryPage;\n\n  useEffect(() => {\n    setGalleryImages(chunkedImages[galleryPage - 1]);\n    setGalleryPageTotal(chunkedImages.length);\n  }, [galleryPage, chunkedImages]);\n\n  const handleViewMoreClick = () => {\n    const pageIncrement = galleryPage + 1;\n\n    pageIncrement > galleryPageTotal\n      ? setGalleryPage(1)\n      : setGalleryPage(galleryPage + 1);\n  };\n\n  const _renderGalleryImages = (\n    <GridList cellHeight={80} cols={3}>\n      {galleryImages.map((image) => {\n        return (\n          <GridListTile key={image.id}>\n            <Img src={image.path} />\n          </GridListTile>\n        );\n      })}\n      <GridListTile key={images.small}>\n        <Img src={images.small} />\n        <StyledGridListTileBar\n          className=\"text-center\"\n          title={\n            <IconButton onClick={handleViewMoreClick}>\n              <Badge\n                badgeContent={galleryViewMoreCount}\n                color=\"primary\"\n                classes={{ badge: classes.gridImageViewMoreBadge }}\n              >\n                {galleryViewMoreCount > 0 ? (\n                  <PhotoLibraryIcon fontSize=\"large\" />\n                ) : (\n                  <ArrowBackIcon fontSize=\"large\" />\n                )}\n              </Badge>\n            </IconButton>\n          }\n        />\n      </GridListTile>\n    </GridList>\n  );\n\n  return (\n    <div className={clsx(classes.imagesContainer, \"images-container w-full\")}>\n      <div className={clsx(classes.featuredImageContainer, \"w-full rounded\")}>\n        <Img src={images.medium} />\n      </div>\n      <div className={clsx(classes.gridImageContainer, \"w-full mt-4\")}>\n        {_renderGalleryImages}\n      </div>\n    </div>\n  );\n}\n\nRecipeDetailImages.propTypes = {\n  images: PropTypes.object\n};\n\nexport default RecipeDetailImages;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport Api from \"../../../services/api\";\nimport RecipeDetailHeading from \"./recipeDetailHeading\";\nimport RecipeDetailIngredients from \"./recipeDetailIngredients\";\nimport RecipeDetailDirections from \"./recipeDetailDirections\";\nimport Suspense from \"../../ui/suspense\";\nimport Sidebar from \"../../ui/layout/sidebar\";\nimport RecipeDetailImages from \"./recipeDetailImages\";\n\nfunction RecipeDetail(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [recipe, setRecipe] = useState({});\n  const [specials, setSpecials] = useState([]);\n\n  const { id } = props.match.params;\n\n  useEffect(() => {\n    const getData = async () => {\n      const recipeResponse = await Api.getRecipe(id);\n\n      setRecipe(recipeResponse.data);\n\n      const specialsResponse = await Api.getIngredientSpecials(\n        recipeResponse.data.ingredients\n      );\n      setSpecials(specialsResponse.data);\n\n      setIsLoading(false);\n    };\n\n    getData();\n  }, [id]);\n\n  return (\n    <div\n      className=\"sm:flex w-full lg:px-208 my-4\"\n      data-testid={`recipe-detail-${recipe.uuid}`}\n    >\n      <Sidebar colSize=\"1/3\" widgetClasses=\"justify-center\">\n        <Suspense\n          loader\n          loadingProps={{\n            isLoading: isLoading,\n            loaderType: \"placeholder\",\n            type: \"gridFeatured\"\n          }}\n        >\n          <RecipeDetailImages images={recipe.images} />\n        </Suspense>\n      </Sidebar>\n      <div\n        className={clsx(\n          \"w-full my-5 p-5 recipe-detail-container\",\n          isLoading && \"flex\"\n        )}\n      >\n        <Suspense loader loadingProps={{ isLoading: isLoading }}>\n          <Paper className={clsx(\"flex flex-col items-center my-5 p-5\")}>\n            <RecipeDetailHeading {...recipe} />\n            <Divider variant=\"middle\" className=\"w-full\" />\n            <RecipeDetailIngredients\n              ingredients={recipe.ingredients}\n              specials={specials}\n            />\n          </Paper>\n          <Paper className={clsx(\"flex flex-col items-center my-5 p-5\")}>\n            <RecipeDetailDirections directions={recipe.directions} />\n          </Paper>\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nRecipeDetail.propTypes = {\n  isLoading: PropTypes.bool,\n  recipe: PropTypes.objectOf(PropTypes.shape({ ingredients: PropTypes.array })),\n  specials: PropTypes.object\n};\n\nexport default RecipeDetail;\n"],"sourceRoot":""}